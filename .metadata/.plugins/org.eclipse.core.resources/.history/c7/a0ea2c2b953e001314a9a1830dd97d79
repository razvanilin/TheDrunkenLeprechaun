package com.NapierDevSoc.TheDrunkenLeprechaun;

import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.graphics.Texture;
import com.badlogic.gdx.graphics.g2d.SpriteBatch;
import com.badlogic.gdx.math.Rectangle;

public class GrassSides {
	
	private final int HEIGHT = 480;
	private final int WIDTH = 250;
	
	private SpriteBatch batch;
	
	private Texture[] grassTexture;
	private Rectangle[] grassRectangle;
	
	public GrassSides(){
		
		grassRectangle = new Rectangle[2];
		grassTexture = new Texture[3];
		
		for (int i=0;i<grassRectangle.length;i++)
		{
			grassRectangle[i] = new Rectangle();
			grassRectangle[i].width = WIDTH;
			grassRectangle[i].height = HEIGHT;
			grassRectangle[i].x = 0;
			grassRectangle[i].y = HEIGHT;
		}
		
		for (int i=0; i<grassTexture.length;i++)
		{
			grassTexture[i] = new Texture(Gdx.files.internal("data/sidesGrass"+i+".png"));
		}
	}
	
	public void drawGrass() {
		for (int i=0; i < grassRectangle.length; i++) {
        		batch.draw(grassTexture[i],
        				grassRectangle[i].x,
        				grassRectangle[i].y,
        				grassRectangle[i].width,
        				grassRectangle[i].height);
		}
	}
	
	/*private void animateGrass() {
		float h = Gdx.graphics.getHeight();
		
		for (int i=0; i < grassRectangle.length; i++) {
			
				pavement[y][x].y += y_offset;
				
				// For walking forward
				if (y_offset < 0 && pavement[y][x].y + pavement[y][x].height <= 0) {
					int y_max = 0;
					for (int yy=0; yy <  pavement.length; yy++) {
						if (pavement[y_max][x].y < pavement[yy][x].y)
							y_max = yy;
					}
					
					pavement[y][x].y = pavement[y_max][x].y + pavement[y_max][x].height + (y == 0 ? -2 : 0);
				}
				
				// For walking backward
				if (y_offset > 0 && pavement[y][x].y >= h) {
					int y_min = 0;
					for (int yy=0; yy < pavement.length; yy++) {
						if (pavement[y_min][x].y > pavement[yy][x].y)
							y_min = yy;
					}
					
					pavement[y][x].y = pavement[y_min][x].y - pavement[y][x].height + (y == pavement.length-1 ? 0 : 2);
				}
			}
		}
	}*/
}
